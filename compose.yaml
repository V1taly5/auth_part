version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - postgres-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  migrations:
    image: migrate/migrate
    volumes:
      - ./migrations:/migrations
    networks:
      - postgres-network
    command: ["-path", "/migrations", "-database", "postgres://postgres:postgres@postgres:5432/mydb?sslmode=disable", "up"]
    depends_on:
      postgres:
        condition: service_healthy

  auth-app:
    build:
      context: .
      dockerfile: dockerfile
    container_name: auth
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      - HTTPSERVER_ADDRESS=0.0.0.0:8080
      - HTTPSERVER_TIMEOUT=4s
      - HTTPSERVER_IDLE_TIMEOUT=60s
      - POSTGRES_URL=postgres://postgres:postgres@postgres:5432/mydb?sslmode=disable
      - JWT_ACCESS_SECRET=my-access-secret-key
      - JWT_ACCESS_EXPIRATION=15m
      - JWT_REFRESH_EXPIRATION=24h
      - EMAIL_FROM=auth@mail.com
      - EMAIL_SERVER=smtp.example.com
      - EMAIL_PORT=444
      - EMAIL_USERNAME=my-email-username
      - EMAIL_PASSWORD=my-email-password
    networks:
      - postgres-network

volumes:
  postgres_data:

networks:
  postgres-network:
    driver: bridge